services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: tiktok-api-web
    ports:
      - "8000:8000"
    environment:
      # Veritabanı ve Redis ayarları
      - DATABASE_URL=postgresql://postgres:password@db:5432/tiktok_api_db
      - REDIS_URL=redis://redis:6379/0
      
      # .env dosyasından okunacak diğer tüm ayarlar
      - ENVIRONMENT=${ENVIRONMENT}
      - DEBUG=${DEBUG}
      - TIKTOK_CLIENT_KEY=${TIKTOK_CLIENT_KEY}
      - TIKTOK_CLIENT_SECRET=${TIKTOK_CLIENT_SECRET}
      - TIKTOK_REDIRECT_URI=${TIKTOK_REDIRECT_URI}
      - SECRET_KEY=${SECRET_KEY}
      - TOKEN_ENCRYPTION_KEY=${TOKEN_ENCRYPTION_KEY} # Sadece bu anahtar yeterli

    depends_on:
      - db
      - redis
    volumes:
      - .:/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - tiktok-network

  db:
    image: postgres:15-alpine
    container_name: tiktok-api-db
    environment:
      - POSTGRES_DB=tiktok_api_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - tiktok-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: tiktok-api-redis
    ports:
      - "6379:6379"
    networks:
      - tiktok-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:

networks:
  tiktok-network:
    driver: bridge